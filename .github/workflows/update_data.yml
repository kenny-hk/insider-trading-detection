name: Update Insider Trading Data

on:
  schedule:
    - cron: '0 8 * * *'  # Run daily at 8:00 UTC
  workflow_dispatch:  # Allow manual triggering

# Add global permissions for the workflow
permissions:
  contents: write  # This is important for pushing changes
  pages: write

jobs:
  update_data:
    runs-on: ubuntu-latest
    # Add job-specific permissions
    permissions:
      contents: write  # Required for git push
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Collect insider trading data
        run: |
          # Set up environment with a valid email (SEC requires a valid email)
          sed -i 's/insidertrading-api@example.com/action@github.com/g' InsiderTrading.py
          
          # Create necessary directories
          mkdir -p data/sec-edgar-filings
          mkdir -p data/json
          
          # Check if database already exists - this indicates a previous run
          if [ -f "data/insider_trading.db" ]; then
            echo "Database exists, downloading only new filings..."
            
            # Calculate date range using Python for cross-platform compatibility
            DATE_RANGE=$(python3 -c "from datetime import datetime, timedelta; today=datetime.now(); yesterday=today-timedelta(days=1); print(f'{yesterday.strftime(\"%Y-%m-%d\")}:{today.strftime(\"%Y-%m-%d\")}')")
            
            echo "Date range: $DATE_RANGE"
            # Download new data for all S&P 500 companies, but only yesterday's data
            python InsiderTrading.py --date-range $DATE_RANGE
          else
            echo "First run, creating database and initial data..."
            # Initialize database with sample structure
            mkdir -p data/sec-edgar-filings/AAPL/4/sample
            echo '<ownershipDocument></ownershipDocument>' > data/sec-edgar-filings/AAPL/4/sample/primary-document.xml
            
            # Initialize the database structure
            python InsiderTrading.py --no-download
            
            # Download historical data for all companies (past 7 days to start)
            # A shorter timeframe for the initial dataset to avoid timeouts
            DATE_RANGE=$(python3 -c "from datetime import datetime, timedelta; today=datetime.now(); week_ago=today-timedelta(days=7); print(f'{week_ago.strftime(\"%Y-%m-%d\")}:{today.strftime(\"%Y-%m-%d\")}')")
            
            echo "Initial data range: $DATE_RANGE"
            python InsiderTrading.py --date-range $DATE_RANGE
          fi
      
      - name: Export data to JSON for API
        run: |
          python export_json.py
      
      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      
      - name: Commit and push JSON files
        run: |
          echo "Staging JSON files..."
          git add data/json/
          
          # Check if there are changes to commit
          if git diff --quiet --staged; then
            echo "No changes to commit, skipping push"
          else
            echo "Changes detected, committing..."
            git commit -m "Update insider trading JSON data [skip ci]"
            
            # Push using the token for authentication
            echo "Pushing changes to the repository..."
            git push "https://x-access-token:${{ github.token }}@github.com/${{ github.repository }}.git" HEAD:main
          fi